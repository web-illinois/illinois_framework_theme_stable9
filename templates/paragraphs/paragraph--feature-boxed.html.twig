{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% if content.field_feature_boxed_img_width ['#items'].0.value == 'fixed' %}
  {% set max_width = 'fixed-width' %}
{% else %}
  {% set max_width = 'full-width' %}
{% endif %}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished',
  'col-lg-12 col-md-12 col-sm-12 d-flex ' ~ max_width
]
%}
{#{{ kint(content) }}#}
{% block paragraph %}
  {# Paragraph ID used for anchor linking #}
  <div {{ attributes.setAttribute('id', 'paragraph--' ~ paragraph.id() ) }} {{ attributes.addClass(classes) }}>
    {% block content %}
      <div class="col-lg-12 col-md-12 col-sm-12 p-0">
          <div class="field--name-field-feature-boxed__image" style="background-image: url('{{ base_path_http ~ file_url(content.field_feature_boxed_img['#items'].entity.uri.value) }}')" alt="{{ content.field_feature_boxed_img.0['#item'].alt}}"></div>
          <div class="col-lg-4 offset-lg-1 col-md-12 col-sm-12 field--name-field-feature-boxed__content__wrapper content__wrapper {{ content.field_feature_boxed_align['#items'].0.value }} background--color--{{ content.field_feature_boxed_background['#items'].0.value }}">
          {% if content.field_feature_boxed_subtitle['#items'] %}
            <div class="field--name-field-feature-boxed__subtitle subtitle">{{ content.field_feature_boxed_subtitle }}</div>
          {% endif %}
          {% if content.field_feature_boxed_title['#items'] %}
            <h2 class="field--name-field-feature-boxed__title title il-formatted">{{ content.field_feature_boxed_title }}</h2>
          {% endif %}
          {% if content.field_feature_boxed_body['#items'] %}
            <div class="field--name-field-feature-boxed__body body il-formatted">{{ content.field_feature_boxed_body }}</div>
          {% endif %}
          {% set button_number = content.field_feature_boxed_button['#items']|length %}
          {% if button_number > 0 %}
            <div class="field--name-field-feature-boxed__buttons">
              {% for item in content.field_feature_boxed_button['#items'] %}
                <a class="field--name-field-feature-boxed__button il-button" href="{{ content.field_feature_boxed_button[loop.index0]['#url'] }}" role="button">{{ content.field_feature_boxed_button[loop.index0]['#title'] }}</a>
              {% endfor %}
            </div>
          {% endif %}
        </div>
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
