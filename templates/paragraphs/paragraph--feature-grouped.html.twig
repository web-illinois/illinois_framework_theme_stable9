{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set background = content.field_feature_grouped_background['#items'].0.value %}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished',
  'col-lg-12 col-md-9 col-sm-12 d-flex row fixed-width',
  'background--color--'~background
]
%}

{% block paragraph %}
  {# Paragraph ID used for anchor linking #}
  <div {{ attributes.setAttribute('id', 'paragraph--' ~ paragraph.id() ) }} {{ attributes.addClass(classes) }}>
    {% block content %}
      {% set layout = content.field_feature_grouped_layout['#items'].0.value %}
      {% if layout == 'right' %}
        {% set row_style = 'flex-row' %}
      {% else %}
        {% set row_style = 'flex-row-reverse' %}
      {% endif %}
      {% set body = content.field_feature_grouped_body['#items'].0.value %}
      <div class="m-0 p-0 col-lg-12 col-md-12 col-sm-12 d-flex row {{ row_style }} paragraph--type--feature-grouped__wrapper background--color--{{ background }}">
        {% if content.field_feature_grouped_title['#items'] %}
          <h2 class="p-0 col-lg-12 col-md-12 col-sm-12 field--name-field-feature-grouped__title title">
            {{ content.field_feature_grouped_title['#items'].0.value }}
          </h2>
        {% endif %}
        <div class="field--name-field-feature-grouped__content col-lg-8 col-md-8 col-sm-12">
          {% if content.field_feature_grouped_subtitle['#items'] %}
            <div class="field--name-field-feature-grouped__subtitle subtitle">
              {{ content.field_feature_grouped_subtitle['#items'].0.value }}
            </div>
          {% endif %}
          {% set button_number = content.field_feature_grouped_buttons['#items']|length %}
          {% if button_number > 0 %}
            <div class="field--name-field-feature-grouped__buttons">
              {% for item in content.field_feature_grouped_buttons['#items'] %}
                {% if loop.index0 == 0 %}
                  <a class="field--name-field-feature-grouped__button il-button il-white-blue" href="{{ content.field_feature_grouped_buttons[loop.index0]['#url'] }}" role="button">{{ content.field_feature_grouped_buttons[loop.index0]['#title'] }}</a>
                {% else %}
                  <a class="field--name-field-feature-grouped__button il-button il-white-blue" href="{{ content.field_feature_grouped_buttons[loop.index0]['#url'] }}" role="button">{{ content.field_feature_grouped_buttons[loop.index0]['#title'] }}</a>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}
          {% if content.field_feature_grouped_body['#items'] %}
            <div class="il-formatted field--name-field-feature-grouped__body body">
              {{ body | raw }}
            </div>
          {% endif %}
        </div>
        <div class="field--name-field-feature-grouped__image__wrapper col-lg-4 col-md-4 col-sm-12">
          {% if content.field_feature_grouped_image['#items'] %}
            {% for item in content.field_feature_grouped_image['#items'] %}
              <div class="field--name-field-feature-grouped__image">
                <img alt="{{ content.field_feature_grouped_image['#items'][loop.index0].alt  }}" title="{{ content.field_feature_grouped_image['#items'][loop.index0].title }}" src="{{ base_path_http ~ file_url(content.field_feature_grouped_image['#items'][loop.index0].entity.uri.value) }}"/>
              </div>
            {% endfor %}
          {% endif %}
        </div>
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
