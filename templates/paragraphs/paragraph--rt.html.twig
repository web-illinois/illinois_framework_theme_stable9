{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
]
%}
{% set column_count = content.field_rt_column['#items']|length %}
{% set background = content.field_rt_background_color['#items'].0.value %}
{% if background == 'Gray' %}
  {% set theme = 'gray' %}
  {% set padding = '20px 20px 30px' %}
{% endif %}

{{ attach_library('illinois_framework_theme_stable9/paragraph-rt') }}

{% block paragraph %}
  {# Paragraph ID used for anchor linking #}
  <div {{ attributes.setAttribute('id', 'paragraph--' ~ paragraph.id() ) }} {{ attributes.addClass(classes) }}>
    {% block content %}
      {% if column_count == 1 %}
        <ilw-content theme="{{ theme }}" width="auto" padding="{{ padding }}">
          {% if content.field_rt_title['#items'] %}
            <h2>{{ content.field_rt_title }}</h2>
          {% endif %}
          {% for item in content.field_rt_column['#items'] %}
            {% set title = content.field_rt_column[loop.index0]['#paragraph'].field_rt_content_title.value %}
            {% set body = content.field_rt_column[loop.index0]['#paragraph'].field_rt_content_body.value|render %}
            {% if title %}
              <h3>{{ title }}</h3>
            {% endif %}
            {% if body|trim %}
              {{ body|check_markup('basic_html') }}
            {% endif %}
          {% endfor %}
        </ilw-content>
      {% else %}
        <ilw-content width="auto">
          {% if content.field_rt_title['#items'] %}
            <h2>{{ content.field_rt_title }}</h2>
          {% endif %}
        </ilw-content>
        <ilw-columns theme="{{ theme }}" width="auto" gap="40px">
          {% for item in content.field_rt_column['#items'] %}
            {% set title = content.field_rt_column[loop.index0]['#paragraph'].field_rt_content_title.value %}
            {% set body = content.field_rt_column[loop.index0]['#paragraph'].field_rt_content_body.value|render %}
            <div>
              <ilw-content>
              {% if title %}
                <h3>{{ title }}</h3>
              {% endif %}
              {% if body|trim %}
                {{ body|check_markup('basic_html') }}
              {% endif %}
              </ilw-content>
            </div>
          {% endfor %}
        </ilw-columns>
      {% endif %}
    {% endblock %}
  </div>
{% endblock paragraph %}
